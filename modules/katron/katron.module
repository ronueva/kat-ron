<?php

use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;
use Drupal\taxonomy\TermStorage;
use Drupal\katron\Utils;
use Drupal\node\Entity\Node;

/**
 * @file
 * Primary module hooks for katron_bak module.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function katron_preprocess_node(&$variables) {

  $variables['#attached']['drupalSettings']['katron']['mapIconPath'] = \Drupal::service('file_url_generator')->generateAbsoluteString($variables['node']->field_map_icon_svg->entity->getFileUri());

}

function katron_preprocess_page(&$variables) {
  $path = \Drupal::service('path.current')->getPath();

  if (strpos($path, "taxonomy") !== FALSE) {
    $variables["hero"] = views_embed_view("frontpage", "hero_block");

    $result = [];
    foreach (\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree("entourage") as $item) {
      $parents = array_reverse(\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadAllParents($item->tid), TRUE);
      $r = &$result;
      foreach ($parents as $k => $v) {
        if (isset($r[$k])) {
          $r[$k] = array_replace($r[$k], [$k => $v->label()]);
        }
        else {
          $r[$k] = [$k => $v->label()];
        }
        $r = &$r[$k];
      }
    }

    $variables["entourage"] = $result;
  }
}

function katron_preprocess_taxonomy_term(&$variables) {
  $invitees = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadChildren($variables["term"]->get("tid")->value);
  $variables['groupId'] = $variables["term"]->get("tid")->value;
  $variables['invitees'] = $invitees;
}
